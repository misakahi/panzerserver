# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: panzer.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='panzer.proto',
  package='panzer',
  syntax='proto3',
  serialized_pb=_b('\n\x0cpanzer.proto\x12\x06panzer\"0\n\x0c\x44riveRequest\x12\x0f\n\x07l_level\x18\x01 \x01(\x01\x12\x0f\n\x07r_level\x18\x02 \x01(\x01\" \n\rDriveResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\x32@\n\x06Panzer\x12\x36\n\x05\x44rive\x12\x14.panzer.DriveRequest\x1a\x15.panzer.DriveResponse\"\x00\x62\x06proto3')
)




_DRIVEREQUEST = _descriptor.Descriptor(
  name='DriveRequest',
  full_name='panzer.DriveRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='l_level', full_name='panzer.DriveRequest.l_level', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='r_level', full_name='panzer.DriveRequest.r_level', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=24,
  serialized_end=72,
)


_DRIVERESPONSE = _descriptor.Descriptor(
  name='DriveResponse',
  full_name='panzer.DriveResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='success', full_name='panzer.DriveResponse.success', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=74,
  serialized_end=106,
)

DESCRIPTOR.message_types_by_name['DriveRequest'] = _DRIVEREQUEST
DESCRIPTOR.message_types_by_name['DriveResponse'] = _DRIVERESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

DriveRequest = _reflection.GeneratedProtocolMessageType('DriveRequest', (_message.Message,), dict(
  DESCRIPTOR = _DRIVEREQUEST,
  __module__ = 'panzer_pb2'
  # @@protoc_insertion_point(class_scope:panzer.DriveRequest)
  ))
_sym_db.RegisterMessage(DriveRequest)

DriveResponse = _reflection.GeneratedProtocolMessageType('DriveResponse', (_message.Message,), dict(
  DESCRIPTOR = _DRIVERESPONSE,
  __module__ = 'panzer_pb2'
  # @@protoc_insertion_point(class_scope:panzer.DriveResponse)
  ))
_sym_db.RegisterMessage(DriveResponse)



_PANZER = _descriptor.ServiceDescriptor(
  name='Panzer',
  full_name='panzer.Panzer',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=108,
  serialized_end=172,
  methods=[
  _descriptor.MethodDescriptor(
    name='Drive',
    full_name='panzer.Panzer.Drive',
    index=0,
    containing_service=None,
    input_type=_DRIVEREQUEST,
    output_type=_DRIVERESPONSE,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_PANZER)

DESCRIPTOR.services_by_name['Panzer'] = _PANZER

# @@protoc_insertion_point(module_scope)
